/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CarCatalogHistory;
import model.carCatalog;

/**
 *
 * @author DELL
 */
public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
    CarCatalogHistory history;
    public SearchJPanel(CarCatalogHistory history) {
        initComponents();
        this.history = history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCatalog = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnCompany = new javax.swing.JButton();
        txtCompany = new javax.swing.JTextField();
        btnYear = new javax.swing.JButton();
        txtYear = new javax.swing.JTextField();
        txtSerial = new javax.swing.JTextField();
        btnSerial = new javax.swing.JButton();
        txtModel = new javax.swing.JTextField();
        btnModel = new javax.swing.JButton();
        btnSeats = new javax.swing.JButton();
        txtMax = new javax.swing.JTextField();
        txtMin = new javax.swing.JTextField();
        lblMin = new javax.swing.JLabel();
        lblMax = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        btnCity = new javax.swing.JButton();
        btnMaintain = new javax.swing.JButton();
        btnAvailability = new javax.swing.JButton();
        lblYes = new javax.swing.JLabel();
        lblNo = new javax.swing.JLabel();
        btnDistinct = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("SEARCH ");

        tblCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "COMPANY", "MODEL NO", "SERIAL NO", "YEAR", "SEATS", "AVAILABILITY", "MAINTAINANCE", "CITY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCatalog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCatalogMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCatalog);

        jButton1.setText("First Available");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnCompany.setText("Company");
        btnCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompanyActionPerformed(evt);
            }
        });

        btnYear.setText("Year");
        btnYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYearActionPerformed(evt);
            }
        });

        txtSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialActionPerformed(evt);
            }
        });

        btnSerial.setText("Serial");
        btnSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialActionPerformed(evt);
            }
        });

        btnModel.setText("Model");
        btnModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelActionPerformed(evt);
            }
        });

        btnSeats.setText("Seats");
        btnSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeatsActionPerformed(evt);
            }
        });

        lblMin.setText("Min");

        lblMax.setText("Max");

        btnCity.setText("City");
        btnCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityActionPerformed(evt);
            }
        });

        btnMaintain.setText("Maintainance Certificate Expired");
        btnMaintain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaintainActionPerformed(evt);
            }
        });

        btnAvailability.setText("Availability");
        btnAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailabilityActionPerformed(evt);
            }
        });

        lblYes.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblYes.setForeground(new java.awt.Color(0, 102, 0));

        lblNo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNo.setForeground(new java.awt.Color(204, 0, 0));

        btnDistinct.setText("List Of All Manufacturers");
        btnDistinct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistinctActionPerformed(evt);
            }
        });

        jLabel1.setText("Available :");

        jLabel2.setText("Not Available :");

        jLabel3.setText("Search the cars by company name :");

        jLabel4.setText("Search the cars by Manufacturing Year :");

        jLabel5.setText("Search the cars by Serial No :");

        jLabel6.setText("Search the cars by Model No :");

        jLabel7.setText("Search the cars by Seats :");

        jLabel8.setText("Search the cars by City :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDistinct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMaintain))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAvailability)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblYes, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblMin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(lblMax)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMax, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnCompany, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnYear, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addComponent(btnSerial, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(btnModel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(btnSeats, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(btnCity, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCity, btnCompany, btnMaintain, btnModel, btnSeats, btnSerial, btnYear, jButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnAvailability)
                    .addComponent(lblYes)
                    .addComponent(lblNo)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCompany)
                    .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnYear)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(btnSerial))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(btnModel)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeats)
                    .addComponent(txtMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMin)
                    .addComponent(jLabel7)
                    .addComponent(lblMax))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCity)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMaintain)
                    .addComponent(btnDistinct))
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblCatalogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCatalogMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCatalogMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
        model.setRowCount(0);
        //String yess = "yes";
        for(carCatalog cc : history.getHistory()){
            
            if(cc.getAvailability()== true){
                
                
            
            
                Object[] row = new Object[8];
                row[0] = cc;
                row[1] = cc.getModel_number();
                row[2] = cc.getSerial_number();
                row[3] = cc.getManufacturing_year();
                row[4] = cc.getSeats();
                row[5] = cc.getAvailability();
                row[6] = cc.getMaintainance();
                row[7] = cc.getCity();

                model.addRow(row);
                break;
        }
           
        }    
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompanyActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
        model.setRowCount(0);
        String yess = txtCompany.getText();
        for(carCatalog cc : history.getHistory()){
            
            if(cc.getCompany().equals(yess)){
                
                
            
            
                Object[] row = new Object[8];
                row[0] = cc;
                row[1] = cc.getModel_number();
                row[2] = cc.getSerial_number();
                row[3] = cc.getManufacturing_year();
                row[4] = cc.getSeats();
                row[5] = cc.getAvailability();
                row[6] = cc.getMaintainance();
                row[7] = cc.getCity();

                model.addRow(row);
                //break;
        }
           
        }    
    }//GEN-LAST:event_btnCompanyActionPerformed

    private void btnYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYearActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
        model.setRowCount(0);
        int yess = Integer.parseInt(txtYear.getText());
        for(carCatalog cc : history.getHistory()){
            
            if(cc.getManufacturing_year()== yess){
                
                
            
            
                Object[] row = new Object[8];
                row[0] = cc;
                row[1] = cc.getModel_number();
                row[2] = cc.getSerial_number();
                row[3] = cc.getManufacturing_year();
                row[4] = cc.getSeats();
                row[5] = cc.getAvailability();
                row[6] = cc.getMaintainance();
                row[7] = cc.getCity();

                model.addRow(row);
                //break;
        }
           
        }    
    }//GEN-LAST:event_btnYearActionPerformed

    private void txtSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialActionPerformed

    private void btnSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
        model.setRowCount(0);
        int yess = Integer.parseInt(txtSerial.getText());
        for(carCatalog cc : history.getHistory()){
            
            if(cc.getSerial_number()== yess){
                
                
            
            
                Object[] row = new Object[8];
                row[0] = cc;
                row[1] = cc.getModel_number();
                row[2] = cc.getSerial_number();
                row[3] = cc.getManufacturing_year();
                row[4] = cc.getSeats();
                row[5] = cc.getAvailability();
                row[6] = cc.getMaintainance();
                row[7] = cc.getCity();

                model.addRow(row);
                //break;
        }
           
        }    
    }//GEN-LAST:event_btnSerialActionPerformed

    private void btnModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
        model.setRowCount(0);
        String yess = (txtModel.getText());
        for(carCatalog cc : history.getHistory()){
            
            if(cc.getModel_number().equals(yess)){
                
                
            
            
                Object[] row = new Object[8];
                row[0] = cc;
                row[1] = cc.getModel_number();
                row[2] = cc.getSerial_number();
                row[3] = cc.getManufacturing_year();
                row[4] = cc.getSeats();
                row[5] = cc.getAvailability();
                row[6] = cc.getMaintainance();
                row[7] = cc.getCity();

                model.addRow(row);
                //break;
        }
           
        }    
        
    }//GEN-LAST:event_btnModelActionPerformed

    private void btnSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeatsActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
        model.setRowCount(0);
        int min = Integer.parseInt(txtMin.getText());
        int max = Integer.parseInt(txtMax.getText());
        for(carCatalog cc : history.getHistory()){
            
            if(cc.getSeats()>= min && cc.getSeats() <= max){
                
                
            
            
                Object[] row = new Object[8];
                row[0] = cc;
                row[1] = cc.getModel_number();
                row[2] = cc.getSerial_number();
                row[3] = cc.getManufacturing_year();
                row[4] = cc.getSeats();
                row[5] = cc.getAvailability();
                row[6] = cc.getMaintainance();
                row[7] = cc.getCity();

                model.addRow(row);
                //break;
        }
           
        }  
        
    }//GEN-LAST:event_btnSeatsActionPerformed

    private void btnCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
        model.setRowCount(0);
        String yess = (txtCity.getText());
        for(carCatalog cc : history.getHistory()){
            
            if(cc.getCity().equals(yess)){
                
                
            
            
                Object[] row = new Object[8];
                row[0] = cc;
                row[1] = cc.getModel_number();
                row[2] = cc.getSerial_number();
                row[3] = cc.getManufacturing_year();
                row[4] = cc.getSeats();
                row[5] = cc.getAvailability();
                row[6] = cc.getMaintainance();
                row[7] = cc.getCity();

                model.addRow(row);
                //break;
        }
           
        }    
    }//GEN-LAST:event_btnCityActionPerformed

    private void btnMaintainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaintainActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
        model.setRowCount(0);
        //String yess = "yes";
        for(carCatalog cc : history.getHistory()){
            
            if(cc.getMaintainance()== false){
                
                
            
            
                Object[] row = new Object[8];
                row[0] = cc;
                row[1] = cc.getModel_number();
                row[2] = cc.getSerial_number();
                row[3] = cc.getManufacturing_year();
                row[4] = cc.getSeats();
                row[5] = cc.getAvailability();
                row[6] = cc.getMaintainance();
                row[7] = cc.getCity();

                model.addRow(row);
                //break;
        }
           
        }    
        
    }//GEN-LAST:event_btnMaintainActionPerformed

    private void btnAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailabilityActionPerformed
        // TODO add your handling code here:
        //DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
       //model.setRowCount(0);
        //String yess = "yes";
        int count=0;
        int count1=0;
        for(carCatalog cc : history.getHistory()){
            
            if(cc.getAvailability()== true){
                
                count++;}
            else{
                count1++;
            
            }
            
            lblYes.setText(String.valueOf(count));
            lblNo.setText(String.valueOf(count1));
                
                
            
            
                
           
        }    
    }//GEN-LAST:event_btnAvailabilityActionPerformed

    private void btnDistinctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistinctActionPerformed
        // TODO add your handling code here:
        
       // DefaultTableModel model = (DefaultTableModel)tblCatalog.getModel();
       // model.setRowCount(0);
        //String yess = (txtCity.getText());
        //ArrayList<String> Temp = new ArrayList<String>();
        HashSet<String> sett=new HashSet<String>();
        for(carCatalog cc : history.getHistory()){
            
            sett.add( cc.getCompany());
            
//            if(!Temp.contains(cc.getCompany())){
//                Temp.add(cc.getCompany());
//        }
        } 
        JOptionPane.showMessageDialog(this, sett);
    }//GEN-LAST:event_btnDistinctActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailability;
    private javax.swing.JButton btnCity;
    private javax.swing.JButton btnCompany;
    private javax.swing.JButton btnDistinct;
    private javax.swing.JButton btnMaintain;
    private javax.swing.JButton btnModel;
    private javax.swing.JButton btnSeats;
    private javax.swing.JButton btnSerial;
    private javax.swing.JButton btnYear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMax;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblNo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblYes;
    private javax.swing.JTable tblCatalog;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCompany;
    private javax.swing.JTextField txtMax;
    private javax.swing.JTextField txtMin;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtSerial;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
