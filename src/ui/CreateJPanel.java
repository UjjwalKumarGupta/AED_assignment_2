/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import model.CarCatalogHistory;
import model.carCatalog;

/**
 *
 * @author DELL
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    CarCatalogHistory history;
    public CreateJPanel(CarCatalogHistory history) {
        initComponents();
        this.history = history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblCompany = new javax.swing.JLabel();
        lblModel = new javax.swing.JLabel();
        lblSerial = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblSeats = new javax.swing.JLabel();
        lblAvailability = new javax.swing.JLabel();
        lblMaintainance = new javax.swing.JLabel();
        txtCompany = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtSerial = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtSeats = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        checkAvail = new javax.swing.JCheckBox();
        checkMaintain = new javax.swing.JCheckBox();
        lblUni = new javax.swing.JLabel();

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("ADD CARS TO THE FLEET");

        lblCompany.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblCompany.setText("Company :");

        lblModel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblModel.setText("Model No :");

        lblSerial.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblSerial.setText("Serial No :");

        lblYear.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblYear.setText("Manufacturing Year :");

        lblSeats.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblSeats.setText("No Of Seats :");

        lblAvailability.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblAvailability.setText("Availability :");

        lblMaintainance.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblMaintainance.setText("Maintainance  :");

        txtSerial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSerialFocusLost(evt);
            }
        });

        btnSave.setText("Add Car");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblCity.setText("City :");

        checkAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAvailActionPerformed(evt);
            }
        });

        checkMaintain.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        checkMaintain.setText("Certified");

        lblUni.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        lblUni.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCity)
                    .addComponent(lblMaintainance)
                    .addComponent(lblAvailability)
                    .addComponent(lblSeats)
                    .addComponent(lblYear)
                    .addComponent(lblSerial)
                    .addComponent(lblCompany)
                    .addComponent(lblModel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCompany, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtModel)
                            .addComponent(txtSerial)
                            .addComponent(txtYear)
                            .addComponent(txtSeats)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(btnSave))
                            .addComponent(txtCity))
                        .addGap(18, 18, 18)
                        .addComponent(lblUni))
                    .addComponent(checkAvail)
                    .addComponent(checkMaintain))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(lblTitle)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCompany)
                    .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModel)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerial)
                    .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUni))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeats)
                    .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailability)
                    .addComponent(checkAvail))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaintainance)
                    .addComponent(checkMaintain))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(btnSave)
                .addContainerGap(132, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        boolean check;
        //carCatalog cc12 = new carCatalog();
        String alphapattern = "^[a-zA-Z]{1,}$";
        String numpattern = "\\d+";
        
        Pattern aP = Pattern.compile(alphapattern);
        Pattern nP = Pattern.compile(numpattern);
        
        Matcher cM = aP.matcher(txtCompany.getText());
        Matcher mM = aP.matcher(txtModel.getText());
        Matcher ctM = aP.matcher(txtCity.getText());
        Matcher yM = nP.matcher(txtYear.getText());
        Matcher sM = nP.matcher(txtSeats.getText());
        Matcher sr = nP.matcher(txtSerial.getText());
       
         if ((!cM.matches()) || (!mM.matches()) || (!ctM.matches()) || (!yM.matches())|| (!sM.matches()) || (!sr.matches()) )
            {
            check=false;
            }
         
         else{
                check=true;
            }
            
         
                
         
        
        if (check == true){
        String company = txtCompany.getText();
        int manufacturing_year = Integer.parseInt(txtYear.getText());
        int serial_number = Integer.parseInt(txtSerial.getText());
        String model_number = txtModel.getText();
        int seats = Integer.parseInt(txtSeats.getText());
        boolean maintainance = checkMaintain.isSelected();
        boolean availability = checkAvail.isSelected();
        String city = txtCity.getText();
        
        carCatalog cc = history.addNewCars();
        
        cc.setCompany(company);
        cc.setManufacturing_year(manufacturing_year);
        cc.setSerial_number(serial_number);
        cc.setModel_number(model_number);
        cc.setSeats(seats);
        cc.setAvailability(availability);
        cc.setMaintainance(maintainance);
        cc.setCity(city);
        
        JOptionPane.showMessageDialog(this, "New Car added to the Fleet");}
        
        else {
            JOptionPane.showMessageDialog(this, "Car cannot Be Created.");}
        
        txtCompany.setText("");
        txtYear.setText("");
        txtSerial.setText("");
        txtModel.setText("");
        txtSeats.setText("");
        checkMaintain.setSelected(false);
        checkAvail.setSelected(false);
        txtCity.setText("");
        
        
        
        
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void checkAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAvailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkAvailActionPerformed

    private void txtSerialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSerialFocusLost
        // TODO add your handling code here:
       // ArrayList<Integer> Temp = new ArrayList<Integer>();
        for(carCatalog cc1 : history.getHistory()){
            if(cc1.getSerial_number() == Integer.parseInt(txtSerial.getText())){
                lblUni.setText("ALready Exists !");
        }
            else{
                lblUni.setText("");
            }
        }
            
    }//GEN-LAST:event_txtSerialFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox checkAvail;
    private javax.swing.JCheckBox checkMaintain;
    private javax.swing.JLabel lblAvailability;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCompany;
    private javax.swing.JLabel lblMaintainance;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSerial;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUni;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCompany;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtSerial;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
